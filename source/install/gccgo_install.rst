Настройване и използване на gccgo
#################################

Този документ обяснява как да използвате ``gccgo``, компилатор за Go програмния език. Компилаторът ``gccgo``
е нов интерфейс за ``gcc``, широко разпространен GNU компилатор. Въпреки че самият интерфейс е
лицензиран под BSD лиценз, той се използва като част от ``gcc`` и е покрит от 
`GNU General Public Lincense <http://www.gnu.org/licenses/gpl.html>`_.

Забележете че ``gccgo`` не е ``6g`` компилатор.

Изходен код
===========

Изходния код на ``gccgo`` е достъпе чрез Subversion. Уеб-страницата на ``gcc`` съдържа `инструкции за изтегляне на gcc изходния код
<http://gcc.gnu.org/svn.html>`_. Изходния код на ``gccgo`` е клон на главното ``gcc`` хранилище:
``svn://gcc.gnu.org/svn/gcc/branches/gccgo``.

Построяване
===========

Построяване на ``gccgo`` е аналогично на построяването на ``gcc``, с една или две допълнителни опции. Виж `инструкциите на
сайта на gcc <http://gcc.gnu.org/install/>`_. Когато изпълнявате ``configure``, добавете опцията ``--enable-languages=c,c++,go``
(заедно с други езици, които искате да построите). Ако целите 32-bit x86, тогава ще искате да построите ``gccgo`` по подрабиране
да поддържа заключени сравнителни и разменящи инструкции; направете това като използвате ``configure`` опцията ``--with-arch=i586``
(или по-нова версия, в зависимост къде искате да бъдат изпълнявани вашите програми).

На x86 GNU/Linux системи, ``gccgo`` компилаторът може да използва малък недопирен куп от go-рутини. Това позволява програмите
да изпълняват много повече go-рутини, тъй като всяка go-рутина може да използва сравнително малък куп (stack). Правенето на това
изисква разработващата се версия на ``gold`` линкера. Най-лесният начин да го направите е да построите GNU binutils, използвайки
``--enable-gold=default``, когато изпълнявате ``configure`` скрипта, и да използвате ``--with-ld=GOLD_BINARY`` когато 
конфигурирате ``gccgo``. Типична поредица от команди би изглеждала така (заменете :file:`/opt/gold` с директория, в която 
имате права за писане).

.. code-block:: console

    cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src login
    [password is "anoncvs"]
    cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src co binutils
    mkdir binutils-objdir
    cd binutils-objdir
    ../src/configure --enable-gold=default --prefix=/opt/gold
    make
    make install

Изискват се някои допълнителни налични програми, за построяването на ``gcc``, както е описано в `страницата на gcc <http://gcc.gnu.org>`_.
Ако всички те са налични тогава типична поредица от команди за инсталация ще изглежда така (използвайте ``--with-ld`` опцията само ако
сте построили и инстлаирали gold линкера както е описано по-горе):

.. code-block:: console

    svn checkout svn://gcc.gnu.org/svn/gcc/branches/gccgo gccgo
    mkdir objdir
    cd objdir
    ../gccgo/configure --enable-languages=c,c++,go --with-ld=/opt/gold/bin/ld
    make
    make install

Използване на gccgo
===================

``gccgo`` работи като други интерфейси на ``gcc``.

Компилиране на файл:

.. code-block:: console

    gccgo -c file.go

Това създава ``file.go``. За да свържете файловете заедно, за да създадете изпълним файл:

.. code-block:: console

    gccgo -o file file.o

За да стартирате изпълнимия файл, трябва да кажете на програмата къде може да намери компилираните Go пакети. Това може да бъде направено
или като зададете ``LD_LIBRARY_PATH`` във вашата среда:

.. code-block:: console

    LIBRARY_PATH=/usr/lib/gcc/MACHINE/VERSION

или използвайки ``-Wl``, ``-R`` опциите, когато свързвате:

.. code-block:: console

    gccgo -o file file.o -Wl,-R,/usr/lib/gcc/MACHINE/VERSION

или можете да използвате ``-static-libgo`` опцията по време на свързване, за да свържете статично срещу libgo, или можете да направите
напълно статична връзка (статично свързване се използва по подразбиране от ``6l`` линкера на Go). На повечето системи статична
връзка ще изглежа нещо като:

.. code-block:: console

    gccgo -o file file.o -static -L /usr/lib/nptl -lgobegin -lgo -lpthread

Можете да получите съобщение относно не създаване на ``.eh_frame_hdr`` секция; това няма нищо общо с Go, и може да бъде игнорирано.
В бъдеще изискването за изрично определяне на ``-L /usr/lib/nptl -lgobegin -lgo -lpthread`` може да бъде премахнато.
